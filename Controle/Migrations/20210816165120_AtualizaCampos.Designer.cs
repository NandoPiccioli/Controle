// <auto-generated />
using System;
using Controle.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Controle.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210816165120_AtualizaCampos")]
    partial class AtualizaCampos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Controle.Models.Anuncio", b =>
                {
                    b.Property<int>("IDAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("IDAnuncio");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Controle.Models.Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ModelosIDModelo")
                        .HasColumnType("int");

                    b.HasKey("IDMarca");

                    b.HasIndex("ModelosIDModelo");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Controle.Models.Modelos", b =>
                {
                    b.Property<int>("IDModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int?>("VeiculoIDVeiculo")
                        .HasColumnType("int");

                    b.HasKey("IDModelo");

                    b.HasIndex("MarcaId");

                    b.HasIndex("VeiculoIDVeiculo");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Controle.Models.Veiculo", b =>
                {
                    b.Property<int>("IDVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeVenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorDeCompra")
                        .HasColumnType("float");

                    b.Property<double>("ValorDeVenda")
                        .HasColumnType("float");

                    b.HasKey("IDVeiculo");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Controle.Models.Anuncio", b =>
                {
                    b.HasOne("Controle.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Controle.Models.Marca", b =>
                {
                    b.HasOne("Controle.Models.Modelos", null)
                        .WithMany("Marcas")
                        .HasForeignKey("ModelosIDModelo");
                });

            modelBuilder.Entity("Controle.Models.Modelos", b =>
                {
                    b.HasOne("Controle.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle.Models.Veiculo", null)
                        .WithMany("Modelos")
                        .HasForeignKey("VeiculoIDVeiculo");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Controle.Models.Veiculo", b =>
                {
                    b.HasOne("Controle.Models.Modelos", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Controle.Models.Modelos", b =>
                {
                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("Controle.Models.Veiculo", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
